apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dart-postgres
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dart-postgres
spec:
  selector:
    matchLabels:
      app: dart-postgres
  template:
    metadata:
      labels:
        app: dart-postgres
    spec:
      containers:
        - name: dart-postgres
          image: postgres:15-alpine
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DB_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              value: dart
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: mount-dart-postgres
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: mount-dart-postgres
          persistentVolumeClaim:
            claimName: dart-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dart-backend-deployment
spec:
  selector:
    matchLabels:
      app: dart-backend
  template:
    metadata:
      labels:
        app: dart-backend
    spec:
      hostNetwork: false
      imagePullSecrets:
        - name: regcred
      containers:
        - name: dart-backend
          image: ghcr.io/it-for-us/dart-backend:latest
          imagePullPolicy: Always
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: kubernetes
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: DB_USERNAME
                  name: postgres-secret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: postgres-secret
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: dart-backend-service
spec:
  selector:
    app: dart-backend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dart-backend-ingress
spec:
  rules:
    - host: dart-dev.fria.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: dart-backend-service
                port:
                  number: 80
